# This denotes that this .nix file is a function which takes as input a nixpkgs function
# note that you could consider nixpkgs function a set (a set of packages) and you'd be mostly right
{ pkgs }:
let
  # JavaScript package set, according to node/default.nix
  # NOTE: I omitted node folder because there is a lot in there and its generated by a tool node2nix
  # which is a package available through
  nodePkgs = (pkgs.callPackage ./node {
    inherit pkgs;
    # Choose Node version I would like to build my node/default.nix derivation/package with
    nodejs = pkgs.nodejs-14_x;
  }).shell.nodeDependencies;
  frontendSrcFiles = ../frontend;

in pkgs.stdenv.mkDerivation {
  name = "static";
  src = ./src;
  # Packages that should be made available for the following script
  # NOTE: this is no longer necessary but would have allowed us, for example, to run:
  # >>> npx tailwindcss -i css/styles.css -o $out/css/styles.css --watch
  buildInputs = [pkgs.nodejs];

  # Ensure that static artifacts are available to the server
  # Note that $out is the folder in nix/store/ where our package will be
  # and that all packages ever built in nix are in nix store with a hash specific build
  # much like a hashmap
  #
  # build(1):                  /nix/store/5qhw99ipn683vik513frrqraz8c3p07j-obelisk-command-0.9.0.1
  # build(2) assuming changes: /nix/store/vik513frrqraz8c3p07j5qhw99ipn683-obelisk-command-0.9.0.1
  installPhase = ''
    ########################################################
    # CSS
    ########################################################
    mkdir -p $out/css

    set -euo pipefail

    # Setting up the node environment:
    ln -s ${nodePkgs}/lib/node_modules ./node_modules
    export PATH="${nodePkgs}/bin:$PATH"

    # We make the frontend haskell source files available here:
    # This corresponds to the path specified in tailwind.config.js
    ln -s ${frontendSrcFiles} frontend

    ########################################################
    # JavaScript Files
    ########################################################
    mkdir -p $out/js
    cp -r js/* $out/js/

    ########################################################
    # Images
    ########################################################
    mkdir -p $out/images
    cp -r images/* $out/images/

    ########################################################
    # Videos
    ########################################################
    mkdir -p $out/videos
    cp -r videos/* $out/videos/

    ########################################################
    # Audio Files
    ########################################################
    mkdir -p $out/audio
    cp -r audio/* $out/audio/

    ########################################################
    # Favicons
    ########################################################
    mkdir -p $out/favicons
    ${pkgs.unzip}/bin/unzip favicons/favicon_package_v0.16.zip -d $out/favicons/
  '';
}
